# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on: 
  workflow_dispatch:
    inputs:
      Artifact:
        description: 'Which environment ?'
        required: true
        type: choice
        options:
          - Dev
          - QA
          - Prod
  
  #push:
   # branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

jobs:
  Build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
  
  Test:
    name: Run Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [Build]
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - run: mvn test --batch-mode --fail-at-end
  
  Publish-job:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [Test]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - run: mvn --batch-mode --update-snapshots verify
    - run: mkdir staging && cp target/*.jar staging
    - uses: actions/upload-artifact@v3
      with:
        name: Package
        path: staging
  
  Artifact:
    name: Push to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [Publish-job]
    steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-java@v1
          with:
            java-version: 17
        - name: Docker build
          run: |
                docker build -t hexadevops/agility:${{ github.event.inputs.Artifact }} -f Dockerfile .
        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Docker push
          run: |
                docker push hexadevops/agility:${{ github.event.inputs.Artifact }}
